import Head from 'next/head';
import { useContext, useState, useCallback } from 'react';
import { MainContext } from '../context';

import { DIDDataStore } from '@glazed/did-datastore';

import styles from '../styles/Home.module.css';

export default function Home() {
  const { auth, ceramic, aliases } = useContext(MainContext);

  const [data, setData] = useState([]);
  const [name, setName] = useState('');
  const [pfp, setPFP] = useState('');
  const [loaded, setLoaded] = useState(false);
  const [error, setError] = useState('');

  const datastore = new DIDDataStore({ ceramic, model: aliases });

  const updateProfile = useCallback(async () => {
    try {
      setLoaded(false);
      await auth();
      await datastore.merge('BasicProfile', { name, pfp });
      const profile = await datastore.get('BasicProfile');
      console.log(profile);
      setData(profile);
      console.log(data);
      setLoaded(true);
      setError('');
    } catch (error) {
      console.log('error :', error.message);
      setLoaded(true);
      setError(error.message);
    }
  }, []);

  const readProfile = useCallback(async () => {
    try {
      setLoaded(false);
      await auth();
      const profile = await datastore.get('BasicProfile');
      console.log(profile);
      setData(profile);
      setLoaded(true);
      setError('');
    } catch (error) {
      console.log('error :', error.message);
      setLoaded(true);
      setError(error.message);
    }
  }, []);


  return (
    <div className={styles.container}>
      <Head>
        <title>Ceramic Basic Profile Template</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className={styles.header}>
        <h1 className={styles.title}>
          Welcome to Ceramic Profiles Template!
        </h1>
        {/* {ceramic.did == undefined ?
          (
            <button onClick={auth} >
              Connect Wallet and Authenticate
            </button>

          ) :
          (
            <div>
              User Authenticated
            </div>
          )
        } */}
      </header>
      <main className={styles.main}>
        <div className={styles.profile}>
          <div>
            <input className={styles.input} placeholder='Name' value={name} onChange={e => setName(e.target.value)} />
            <input className={styles.input} placeholder='Image URL' value={pfp} onChange={e => setPFP(e.target.value)} />
            {name && <h3>{name}</h3>}
            {pfp && <img style={{ width: '250px' }} src={pfp} />}
          </div>
          <button className={styles.button} onClick={updateProfile}>
            Update Profile
          </button>
        </div>
        <div className={styles.profile}>
          {data != null ?
            <div>
              <h3>Name: {data.name}</h3>
              <h3>Profile Picture:</h3>
              <img style={{ width: '250px' }} src={data.pfp} />
            </div>
            :
            <div style={{ color: 'red' }}>Ceramic DID {ceramic.did._id} has no profile yet</div>
          }
          <button className={styles.button} onClick={readProfile}>
            Read Profile
          </button>
        </div>
      </main>
    </div>
  )
}
